/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  RibbonGroup,
  RibbonModel,
  RibbonSubject,
} from './globals/models';

export namespace Components {
  interface WcRibbonCell {
    'annotationLabels': string[];
    'binaryColor': boolean;
    'classLabels': string[];
    'colorBy': any;
    'group': RibbonGroup;
    'maxColor': number[];
    'maxHeatLevel': number;
    'minColor': number[];
    'selected': boolean;
    'subject': RibbonSubject;
  }
  interface WcRibbonStrips {
    /**
    * add a cell at the beginning of each row/subject to show all annotations
    */
    'addCellAll': boolean;
    'annotationLabels': string[];
    'baseApiUrl': string;
    'binaryColor': boolean;
    'classLabels': string[];
    'colorBy': any;
    /**
    * if provided, will override any value provided in subjects and subset
    */
    'data': string;
    'groupBaseUrl': string;
    'groupClickable': boolean;
    'groupMaxLabelSize': number;
    'groupNewTab': boolean;
    'maxColor': number[];
    'maxHeatLevel': number;
    'minColor': number[];
    'ribbonSummary': RibbonModel;
    /**
    * Click handling of a cell.  0 = select only the cell (1 subject, 1 group) 1 = select the whole column (all subjects, 1 group)
    */
    'selectionMode': any;
    'subjectBaseUrl': string;
    'subjectOpenNewTab': boolean;
    /**
    * Position the subject label of each row 0 = None 1 = Left 2 = Right 3 = Bottom
    */
    'subjectPosition': any;
    'subjectUseTaxonIcon': boolean;
    /**
    * provide gene ids (e.g. RGD:620474,RGD:3889 or as a list ["RGD:620474", "RGD:3889"])
    */
    'subjects': string;
    'subset': string;
  }
  interface WcRibbonSubject {
    'newTab': boolean;
    'subject': {
      id: string,
      label: string,
      taxon_id: string,
      taxon_label: string,
      nb_classes: number,
      nb_annotations: number,
      groups: [{}]
    };
    'subjectBaseURL': string;
  }
}

declare global {


  interface HTMLWcRibbonCellElement extends Components.WcRibbonCell, HTMLStencilElement {}
  var HTMLWcRibbonCellElement: {
    prototype: HTMLWcRibbonCellElement;
    new (): HTMLWcRibbonCellElement;
  };

  interface HTMLWcRibbonStripsElement extends Components.WcRibbonStrips, HTMLStencilElement {}
  var HTMLWcRibbonStripsElement: {
    prototype: HTMLWcRibbonStripsElement;
    new (): HTMLWcRibbonStripsElement;
  };

  interface HTMLWcRibbonSubjectElement extends Components.WcRibbonSubject, HTMLStencilElement {}
  var HTMLWcRibbonSubjectElement: {
    prototype: HTMLWcRibbonSubjectElement;
    new (): HTMLWcRibbonSubjectElement;
  };
  interface HTMLElementTagNameMap {
    'wc-ribbon-cell': HTMLWcRibbonCellElement;
    'wc-ribbon-strips': HTMLWcRibbonStripsElement;
    'wc-ribbon-subject': HTMLWcRibbonSubjectElement;
  }
}

declare namespace LocalJSX {
  interface WcRibbonCell {
    'annotationLabels'?: string[];
    'binaryColor'?: boolean;
    'classLabels'?: string[];
    'colorBy'?: any;
    'group'?: RibbonGroup;
    'maxColor'?: number[];
    'maxHeatLevel'?: number;
    'minColor'?: number[];
    'selected'?: boolean;
    'subject'?: RibbonSubject;
  }
  interface WcRibbonStrips {
    /**
    * add a cell at the beginning of each row/subject to show all annotations
    */
    'addCellAll'?: boolean;
    'annotationLabels'?: string[];
    'baseApiUrl'?: string;
    'binaryColor'?: boolean;
    'classLabels'?: string[];
    'colorBy'?: any;
    /**
    * if provided, will override any value provided in subjects and subset
    */
    'data'?: string;
    'groupBaseUrl'?: string;
    'groupClickable'?: boolean;
    'groupMaxLabelSize'?: number;
    'groupNewTab'?: boolean;
    'maxColor'?: number[];
    'maxHeatLevel'?: number;
    'minColor'?: number[];
    'onCellClick'?: (event: CustomEvent<any>) => void;
    'onCellEnter'?: (event: CustomEvent<any>) => void;
    'onCellLeave'?: (event: CustomEvent<any>) => void;
    'onGroupClick'?: (event: CustomEvent<any>) => void;
    'ribbonSummary'?: RibbonModel;
    /**
    * Click handling of a cell.  0 = select only the cell (1 subject, 1 group) 1 = select the whole column (all subjects, 1 group)
    */
    'selectionMode'?: any;
    'subjectBaseUrl'?: string;
    'subjectOpenNewTab'?: boolean;
    /**
    * Position the subject label of each row 0 = None 1 = Left 2 = Right 3 = Bottom
    */
    'subjectPosition'?: any;
    'subjectUseTaxonIcon'?: boolean;
    /**
    * provide gene ids (e.g. RGD:620474,RGD:3889 or as a list ["RGD:620474", "RGD:3889"])
    */
    'subjects'?: string;
    'subset'?: string;
  }
  interface WcRibbonSubject {
    'newTab'?: boolean;
    'subject'?: {
      id: string,
      label: string,
      taxon_id: string,
      taxon_label: string,
      nb_classes: number,
      nb_annotations: number,
      groups: [{}]
    };
    'subjectBaseURL'?: string;
  }

  interface IntrinsicElements {
    'wc-ribbon-cell': WcRibbonCell;
    'wc-ribbon-strips': WcRibbonStrips;
    'wc-ribbon-subject': WcRibbonSubject;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'wc-ribbon-cell': LocalJSX.WcRibbonCell & JSXBase.HTMLAttributes<HTMLWcRibbonCellElement>;
      'wc-ribbon-strips': LocalJSX.WcRibbonStrips & JSXBase.HTMLAttributes<HTMLWcRibbonStripsElement>;
      'wc-ribbon-subject': LocalJSX.WcRibbonSubject & JSXBase.HTMLAttributes<HTMLWcRibbonSubjectElement>;
    }
  }
}


